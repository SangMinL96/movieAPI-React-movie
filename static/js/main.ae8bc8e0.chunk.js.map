{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/Detail.js","components/App.js","apollo.js","index.js"],"names":["Items","styled","div","Poster","props","bg","LikeBtn","button","LIKE_MOVIE","gql","id","isLiked","useMutation","variables","parseInt","toggleMovie","to","onClick","GET_MOVIES","Container","Movies","Header","Home","useQuery","loading","data","className","movies","map","m","Movie","key","medium_cover_image","MovieContent","MovieImge","GET_MOVIE","useParams","movie","title","language","rating","description_intro","App","exact","path","component","Detail","client","ApolloClient","uri","resolvers","Mutation","toggleLikeMovie","_","cache","writeData","ReactDOM","render","document","getElementById"],"mappings":"2mCAKA,IAAMA,EAAQC,IAAOC,IAAV,KAKLC,EAASF,IAAOC,IAAV,KACc,SAACE,GAAD,OAAWA,EAAMC,MAWrCC,EAAUL,IAAOM,OAAV,KAaPC,EAAaC,YAAH,KAKD,cAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,QAASN,EAAS,EAATA,GAAS,EAChBO,sBAAYJ,EAAY,CAC5CK,UAAW,CAAEH,GAAII,SAASJ,GAAKC,aAD1BI,EAD+B,oBAItC,OACE,kBAACf,EAAD,KACE,kBAAC,IAAD,CAAMgB,GAAE,WAAMN,IACZ,kBAACP,EAAD,CAAQE,GAAIA,KAEd,kBAACC,EAAD,CAASW,QAASF,GAAcJ,EAAU,SAAW,U,4tCC5C3D,IAAMO,EAAaT,YAAH,KAWVU,EAAYlB,IAAOC,IAAV,KAMTkB,EAASnB,IAAOC,IAAV,KASNmB,EAASpB,IAAOC,IAAV,KA0DGoB,MA3Bf,WAAiB,IAAD,EACYC,mBAASL,GAA3BM,EADM,EACNA,QAASC,EADH,EACGA,KAEjB,OACE,oCACE,kBAACN,EAAD,KACE,kBAACE,EAAD,KACE,iFACA,yBAAKK,UAAU,WAAf,yBAEDF,GAAW,8BACZ,kBAACJ,EAAD,MACII,GACAC,EAAKE,QACLF,EAAKE,OAAOC,KAAI,SAACC,GAAD,OACd,kBAACC,EAAD,CACEC,IAAKF,EAAEnB,GACPA,GAAImB,EAAEnB,GACNC,QAASkB,EAAElB,QACXN,GAAIwB,EAAEG,4B,6uCCzEtB,IAAMb,EAAYlB,IAAOC,IAAV,KAmBT+B,EAAehC,IAAOC,IAAV,KAkBZgC,EAAYjC,IAAOC,IAAV,KACW,SAACE,GAAD,OAAWA,EAAMC,MAKrC8B,EAAY1B,YAAH,KAcA,aAAO,IACdC,EAAO0B,cAAP1B,GADa,EAGOa,mBAASY,EAAW,CAC5CtB,UAAW,CAAEH,GAAII,SAASJ,MADpBc,EAHW,EAGXA,QAASC,EAHE,EAGFA,KAIjB,OACE,kBAAC,EAAD,KACE,kBAACQ,EAAD,KACE,wBAAIP,UAAU,SACXF,EACG,aADI,UAEDC,EAAKY,MAAMC,MAFV,wBAGNb,EAAKY,MAAM1B,QAAU,eAAO,iBAEhC,yBAAKe,UAAU,mBACXF,GAAWC,EAAKY,MAAME,SAD1B,KACsCf,GAAWC,EAAKY,MAAMG,QAE5D,yBAAKd,UAAU,YACXF,GAAWC,EAAKY,MAAMI,oBAG5B,kBAACP,EAAD,CAAW7B,IAAKmB,GAAWC,EAAKY,MAAML,uBC1E7BU,MATf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvB,IACjC,kBAAC,IAAD,CAAOsB,KAAK,OAAOC,UAAWC,MCYrBC,EAnBA,IAAIC,IAAa,CAC9BC,IAAK,yBACLC,UAAW,CACTpB,MAAO,CACLnB,QAAS,kBAAM,IAEjBwC,SAAU,CACRC,gBAAiB,SAACC,EAAD,KAAoC,IAA9B3C,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,QAAyB,EAAZ2C,MAChCC,UAAU,CACd7C,GAAG,SAAD,OAAWA,GACbe,KAAM,CACJd,SAAUA,UCPtB6C,IAASC,OACP,kBAAC,iBAAD,CAAgBV,OAAQA,GACtB,kBAAC,EAAD,OAGFW,SAASC,eAAe,W","file":"static/js/main.ae8bc8e0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nconst Items = styled.div`\r\n  width: 100%;\r\n  height: 360px;\r\n  position: relative;\r\n`;\r\nconst Poster = styled.div`\r\n  background-image: url(${(props) => props.bg});\r\n  height: 100%;\r\n  width: 100%;\r\n  border-radius: 14px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px;\r\n  background-size: cover;\r\n  &:hover {\r\n    transform: scale(1.03);\r\n    opacity: 90%;\r\n  }\r\n`;\r\nconst LikeBtn = styled.button`\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 20px;\r\n  outline: none;\r\n  border: 1px solid aqua;\r\n  background-color: aqua;\r\n  color: black;\r\n\r\n  width: 50px;\r\n  height: 30px;\r\n`;\r\n\r\nconst LIKE_MOVIE = gql`\r\n  mutation toggleLikeMovie($id: Int!, $isLiked: Boolean!) {\r\n    toggleLikeMovie(id: $id, isLiked: $isLiked) @client\r\n  }\r\n`;\r\nexport default ({ id, isLiked, bg }) => {\r\n  const [toggleMovie] = useMutation(LIKE_MOVIE, {\r\n    variables: { id: parseInt(id), isLiked },\r\n  });\r\n  return (\r\n    <Items>\r\n      <Link to={`/${id}`}>\r\n        <Poster bg={bg} />\r\n      </Link>\r\n      <LikeBtn onClick={toggleMovie}>{isLiked ? \"Unlike\" : \"Like\"}</LikeBtn>\r\n    </Items>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport styled from \"styled-components\";\r\nimport Movie from \"../components/Movie\";\r\nconst GET_MOVIES = gql`\r\n  {\r\n    movies {\r\n      id\r\n      title\r\n      medium_cover_image\r\n      rating\r\n      isLiked @client\r\n    }\r\n  }\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Movies = styled.div`\r\n  display: grid;\r\n  width: 50%;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-gap: 25px;\r\n  align-items: center;\r\n  position: relative;\r\n  top: -50px;\r\n`;\r\nconst Header = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  justify-content: center;\r\n  line-height: 1.5;\r\n  background: #f857a6; /* fallback for old browsers */\r\n  background: -webkit-linear-gradient(\r\n    to right,\r\n    #ff5858,\r\n    #f857a6\r\n  ); /* Chrome 10-25, Safari 5.1-6 */\r\n  background: linear-gradient(\r\n    to right,\r\n    #ff5858,\r\n    #f857a6\r\n  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n\r\n  width: 100%;\r\n  height: 43vh;\r\n  h3 {\r\n    font-size: 3rem;\r\n    color: white;\r\n    font-weight: bold;\r\n  }\r\n  .content {\r\n    font-size: 2rem;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nfunction Home() {\r\n  const { loading, data } = useQuery(GET_MOVIES);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Header>\r\n          <h3>ÏÉÅÎØºÏù¥Ïùò Î¨¥ÎπÑÏä§ÌÉÄ</h3>\r\n          <div className=\"content\">React,Apollo,GraphQL</div>\r\n        </Header>\r\n        {loading && <div></div>}\r\n        <Movies>\r\n          {!loading &&\r\n            data.movies &&\r\n            data.movies.map((m) => (\r\n              <Movie\r\n                key={m.id}\r\n                id={m.id}\r\n                isLiked={m.isLiked}\r\n                bg={m.medium_cover_image}\r\n              />\r\n            ))}\r\n        </Movies>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport styled from \"styled-components\";\r\n\r\n// import { styled } from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: #feac5e; /* fallback for old browsers */\r\n  background: -webkit-linear-gradient(\r\n    to right,\r\n    #4bc0c8,\r\n    #c779d0,\r\n    #feac5e\r\n  ); /* Chrome 10-25, Safari 5.1-6 */\r\n  background: linear-gradient(\r\n    to right,\r\n    #4bc0c8,\r\n    #c779d0,\r\n    #feac5e\r\n  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n`;\r\nconst MovieContent = styled.div`\r\n  line-height: 1.5;\r\n  width: 50%;\r\n  color: white;\r\n  .title {\r\n    font-size: 3.5rem;\r\n    font-weight: bold;\r\n  }\r\n  .languageRating {\r\n    font-size: 1.7rem;\r\n    font-weight: bold;\r\n  }\r\n  .content {\r\n    font-size: 1.3rem;\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst MovieImge = styled.div`\r\n  background-image: url(${(props) => props.bg});\r\n  background-size: cover;\r\n  width: 25%;\r\n  height: 60%;\r\n`;\r\nconst GET_MOVIE = gql`\r\n  query getMovie($id: Int!) {\r\n    movie(id: $id) {\r\n      id\r\n      title\r\n      medium_cover_image\r\n      language\r\n      rating\r\n      description_intro\r\n      isLiked @client\r\n    }\r\n  }\r\n`;\r\n\r\nexport default () => {\r\n  let { id } = useParams();\r\n\r\n  const { loading, data } = useQuery(GET_MOVIE, {\r\n    variables: { id: parseInt(id) },\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <MovieContent>\r\n        <h4 className=\"title\">\r\n          {loading\r\n            ? \"Loading...\"\r\n            : `${data.movie.title} \r\n          ${data.movie.isLiked ? \"üíñ\" : \"üò¢\"}`}\r\n        </h4>\r\n        <div className=\"languageRating\">\r\n          {!loading && data.movie.language} {!loading && data.movie.rating}\r\n        </div>\r\n        <div className=\"content\">\r\n          {!loading && data.movie.description_intro}\r\n        </div>\r\n      </MovieContent>\r\n      <MovieImge bg={!loading && data.movie.medium_cover_image} />\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"../routes/Home\";\nimport Detail from \"../routes/Detail\";\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/:id\" component={Detail} />\n    </Router>\n  );\n}\n\nexport default App;\n","import ApolloClient from \"apollo-boost\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"http://localhost:4000/\",\r\n  resolvers: {\r\n    Movie: {\r\n      isLiked: () => false,\r\n    },\r\n    Mutation: {\r\n      toggleLikeMovie: (_, { id, isLiked }, { cache }) => {\r\n        cache.writeData({\r\n          id: `Movie:${id}`,\r\n          data: {\r\n            isLiked: !isLiked,\r\n          },\r\n        });\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default client;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport client from \"./apollo\";\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}